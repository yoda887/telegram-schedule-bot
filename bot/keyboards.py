# /root/telegram-schedule-bot/bot/keyboards.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from datetime import datetime
from typing import List, Dict, Any # –î–ª—è —Ç–∞–π–ø —Ö—ñ–Ω—Ç—ñ–≤

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–∑ google_sheets.py, –≥–¥–µ –æ–Ω –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
from .google_sheets import DATE_FORMAT_IN_SHEET

MESSENGER_OPTIONS = {
    "viber": "Viber",
    "telegram": "Telegram",
    "whatsapp": "WhatsApp",
    "zoom": "Zoom",
    "teams": "Teams"
}

def get_messenger_choice_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –º–µ—Å–µ–Ω–¥–∂–µ—Ä–∞."""
    builder = InlineKeyboardBuilder()
    for callback_data_key, text in MESSENGER_OPTIONS.items():
        builder.button(text=text, callback_data=f"messenger_{callback_data_key}")
    builder.adjust(2) 
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_booking_phone")) # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –¥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞
    return builder.as_markup()

def get_service_choice_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üìû –ó–∞–ª–∏—à–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç", callback_data="ask_contact")
    builder.button(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é", callback_data="book_consultation")
    builder.button(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –º—ñ–π –∑–∞–ø–∏—Å", callback_data="cancel_my_booking_start") # –ù–æ–≤–∞ –∫–Ω–æ–ø–∫–∞
    builder.adjust(1) # –ö–æ–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ –Ω–æ–≤–æ–º—É —Ä—è–¥–∫—É –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
    return builder.as_markup()

def get_dates_keyboard(dates_dict: dict) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'.
    dates_dict: –°–ª–æ–≤–∞—Ä—å { '–¥–∞—Ç–∞_—Å—Ç—Ä–æ–∫–∞': ['–≤—Ä–µ–º—è1', '–≤—Ä–µ–º—è2'], ... }
    """
    builder = InlineKeyboardBuilder()
    try:
        sorted_dates = sorted(
            dates_dict.keys(),
            key=lambda d_str: datetime.strptime(d_str.strip(), DATE_FORMAT_IN_SHEET).date()
        )
    except Exception as e_sort:
        import sys
        print(f"–û–®–ò–ë–ö–ê [keyboards.py]: –û—à–∏–±–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞—Ç: {e_sort}. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏.", file=sys.stderr)
        sorted_dates = list(dates_dict.keys())

    for date_str in sorted_dates:
        builder.button(text=date_str, callback_data=f"date_{date_str}")
    builder.adjust(2)
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_service_choice_from_date"))
    return builder.as_markup()

def get_times_keyboard(times_list: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'."""
    builder = InlineKeyboardBuilder()
    for time_str in sorted(times_list): # –°–æ—Ä—Ç—É—î–º–æ —á–∞—Å –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—ñ
        builder.button(text=time_str, callback_data=f"time_{time_str}")
    builder.adjust(3)
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_date_selection"))
    return builder.as_markup()

def get_share_contact_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    builder = ReplyKeyboardBuilder()
    builder.button(text="üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –º–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=True)


def get_back_to_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–æ—é '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu_start")
    return builder.as_markup()


def get_user_bookings_keyboard(bookings: List[Dict[str, Any]]) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –±—Ä–æ–Ω—é–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è.
    bookings: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–Ω–∏–∫—ñ–≤, –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –º—ñ—Å—Ç–∏—Ç—å 'date', 'time', 'row_index'.
    """
    builder = InlineKeyboardBuilder()
    if not bookings:
        # –¢–µ–æ—Ä–µ—Ç–∏—á–Ω–æ, —Ü—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –Ω–µ –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—è –∑ –ø–æ—Ä–æ–∂–Ω—ñ–º —Å–ø–∏—Å–∫–æ–º,
        # –∞–ª–µ –¥–ª—è –±–µ–∑–ø–µ–∫–∏ –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        builder.button(text="ü§∑ –ó–∞–ø–∏—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ù–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu_start")
        return builder.as_markup()

    for booking in bookings:
        # callback_data –±—É–¥–µ –º—ñ—Å—Ç–∏—Ç–∏ row_index, date, time —á–µ—Ä–µ–∑ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ '_'
        # –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –ø–æ—Ç—ñ–º –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ –¥–∞–Ω—ñ –≤ —Ö–µ–Ω–¥–ª–µ—Ä—ñ
        # –í–∞–∂–ª–∏–≤–æ: row_index - —Ü–µ —ñ–Ω–¥–µ–∫—Å —Ä—è–¥–∫–∞ –≤ Google Sheet "–ó–∞—è–≤–∫–∏"
        # date —ñ time –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –≤ –∞—Ä–∫—É—à—ñ "–ì—Ä–∞—Ñ—ñ–∫"
        callback_info = f"{booking['row_index']}_{booking['date']}_{booking['time']}"
        display_text = f"–°–∫–∞—Å—É–≤–∞—Ç–∏: {booking['date']} –æ {booking['time']}"
        if booking.get('question'): # –î–æ–¥–∞–º–æ —á–∞—Å—Ç–∏–Ω—É –ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è –∫—Ä–∞—â–æ—ó —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
            display_text += f" ({booking['question'][:20]}...)" if len(booking['question']) > 20 else f" ({booking['question']})"
        builder.button(text=display_text, callback_data=f"cancel_selected_booking_{callback_info}")
    
    builder.adjust(1) # –ö–æ–∂–Ω–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –Ω–∞ –æ–∫—Ä–µ–º—ñ–π –∫–Ω–æ–ø—Ü—ñ
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu_start"))
    return builder.as_markup()


def get_confirm_cancellation_keyboard(booking_callback_info: str) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è.
    booking_callback_info: –†—è–¥–æ–∫ –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è (row_index_date_time).
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –¢–∞–∫, —Å–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å", callback_data=f"confirm_cancellation_yes_{booking_callback_info}")
    builder.button(text="‚ùå –ù—ñ, –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞–ø–∏—Å", callback_data="confirm_cancellation_no") # –ú–æ–∂–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –¥–æ —Å–ø–∏—Å–∫—É –∑–∞–ø–∏—Å—ñ–≤ –∞–±–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    builder.adjust(1)
    return builder.as_markup()
